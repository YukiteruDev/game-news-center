services:
  backend:
    container_name: news-backend-prod
    build:
      context: .
      dockerfile: backend/Dockerfile
    ports:
      - '127.0.0.1:3000:3000'
    environment:
      - NODE_ENV=production
      - PUPPETEER_CACHE_DIR=/app/.puppeteer-cache
    env_file:
      - ./.env
    volumes:
      - puppeteer_cache:/app/.puppeteer-cache
      - /var/log/game-news:/app/logs
    networks:
      - news-network
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ['CMD-SHELL', 'curl --fail http://localhost:3000/health || exit 1']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    command: >
      sh -c "
        echo 'Running database creation...' &&
        pnpm --filter backend migrate:create &&
        sleep 5 &&
        echo 'Running database migrations...' &&
        pnpm --filter backend migrate:up &&
        sleep 5 &&
        echo 'Starting application...' &&
        node backend/dist/src/app.js
      "

  db:
    image: postgres:17-alpine
    container_name: news-db-prod
    restart: always
    env_file:
      - ./.env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - news-network
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}']
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  news-network:
    driver: bridge

volumes:
  postgres_data:
  puppeteer_cache:
