services:
  backend-dev:
    container_name: news-backend-dev
    build:
      context: .
      dockerfile: backend/Dockerfile.dev
    ports:
      - '3000:3000'
    environment:
      - NODE_ENV=development
      - PUPPETEER_CACHE_DIR=/app/.puppeteer-cache
    env_file:
      - ./.env
    volumes:
      - .:/app
      - /app/node_modules
      - /app/backend/node_modules
      - puppeteer_cache:/app/.puppeteer-cache
    command: >
      sh -c "
        echo 'Running database migrations...' &&
        pnpm --filter backend run migrate:up &&
        echo 'Starting application...' &&
        pnpm --filter backend run dev
      "
    networks:
      - news-network
    depends_on:
      db:
        condition: service_healthy

  db:
    image: postgres:17-alpine
    container_name: news-db-dev
    restart: always
    env_file:
      - ./.env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - '5433:5432'
    networks:
      - news-network
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}']
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  news-network:
    driver: bridge

volumes:
  postgres_data:
  puppeteer_cache:
